<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security.xsd
       ">
    <!-- 스프링시큐리티 디버깅 가능 민감정보가 포함되어 있어 Do not use in a production system!
    <security:debug/>-->

    <security:http auto-config="true" use-expressions="true" authentication-manager-ref="customAuthenticationManager">
        <security:form-login
            login-page="/auth/login.do"
            authentication-success-handler-ref="customAuthenticationSuccessHandler"
        />
        <!-- 로그아웃 -->
        <security:logout
                invalidate-session="true"
                delete-cookies="remember-me, JSESSIONID"
                logout-url="/auth/logout.do"
                success-handler-ref="customLogoutSuccessHandler"/>

        <security:intercept-url pattern="/resources/**" access="permitAll"/>
        <security:intercept-url pattern="/auth/login.do" access="permitAll"/>
        <security:intercept-url pattern="/" access="permitAll"/>
        <security:intercept-url pattern="/index.do" access="permitAll"/>
        <security:intercept-url pattern="/join/member.do" access="permitAll"/>
        <security:intercept-url pattern="/join/getMember.do" access="permitAll"/>
        <security:intercept-url pattern="/**" access="isAuthenticated()"/>

        <security:csrf disabled="true" /><!-- 회원가입/로그인 시 POST 금지되는 부분을 막기 위해 true 아니면 다 input:csrf 해줘야함 -->
    </security:http>

    <security:authentication-manager alias="customAuthenticationManager">
        <security:authentication-provider ref="customAuthenticationProvider" /> <!-- 권한설정 커스텀 bean-->
        <security:authentication-provider user-service-ref="customUserDetailsService"><!-- 사용자 정보 설정 커스텀 -->
            <security:password-encoder ref="bcryptPasswordEncoder" /> <!--로그인 비밀번호 암호화 인코딩 bean-->
        </security:authentication-provider>
    </security:authentication-manager>


    <bean id="customAuthenticationSuccessHandler" class="com.example.dingko.auth.security.CustomAuthenticationSuccessHandler" /><!-- 로그인 성공 커스텀 bean-->
    <bean id="customAuthenticationProvider" class="com.example.dingko.auth.security.CustomAuthenticationProvider" /><!-- 권한설정 커스텀 bean-->
    <bean id="customUserDetailsService" class="com.example.dingko.auth.security.CustomUserDetailsService"/><!-- 사용자 정보 설정 커스텀 bean -->
    <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/><!--로그인 비밀번호 암호화 인코딩 bean-->
    <bean id="customLogoutSuccessHandler" class="com.example.dingko.auth.security.CustomAuthenticationLogoutSuccessHandler" /><!-- 로그아웃 성공 bean -->
</beans>